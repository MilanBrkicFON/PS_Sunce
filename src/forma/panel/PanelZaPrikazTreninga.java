/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.panel;

import domen.Clan;
import domen.Trener;
import domen.Trening;
import forma.UbaciClanoveUTrening;
import forma.panel.model.ListModelClanovi;
import forma.panel.model.ListModelTrener;
import forma.panel.model.TableModelPrikazVreme;
import java.awt.EventQueue;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import osluskivac.OsluskivacClanovi;
import radnaMemorija.Memory;
import repozitorijum.Kontroler;

/**
 *
 * @author Milan
 */
public class PanelZaPrikazTreninga extends javax.swing.JPanel {

    /**
     * Creates new form PanelZaPrikazTreninga
     */
    public PanelZaPrikazTreninga() throws Exception {
        System.out.println("Panel za prikaz treninga");
        initComponents();
        ucitajListuTreninga();
        jProgressBarPopunjenostTreninga.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Centralni = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListTrener = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jcboxDatumTreninga = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePrikazVremena = new javax.swing.JTable();
        jProgressBarPopunjenostTreninga = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClanova = new javax.swing.JList<>();
        jBtnDodajClanaNaTrening = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Treneri"));

        jListTrener.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jListTrener.setEnabled(false);
        jScrollPane2.setViewportView(jListTrener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addContainerGap())
        );

        jcboxDatumTreninga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcboxDatumTreningaActionPerformed(evt);
            }
        });

        jLabel1.setText("Datum treninga: ");

        jTablePrikazVremena.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vreme od", "Vreme do"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePrikazVremena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrikazVremenaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePrikazVremena);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcboxDatumTreninga, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcboxDatumTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jProgressBarPopunjenostTreninga.setName("Popunjenost treninga"); // NOI18N
        jProgressBarPopunjenostTreninga.setOpaque(true);
        jProgressBarPopunjenostTreninga.setStringPainted(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clanovi"));

        jListClanova.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jListClanova.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListClanova.setEnabled(false);
        jScrollPane1.setViewportView(jListClanova);

        jBtnDodajClanaNaTrening.setIcon(new javax.swing.ImageIcon("C:\\Users\\Milan\\Documents\\NetBeansProjects\\SeminarksiPS\\KlijentskaAplSKC\\jpg\\rsz_greenadd.png")); // NOI18N
        jBtnDodajClanaNaTrening.setToolTipText("dodaj clana");
        jBtnDodajClanaNaTrening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajClanaNaTreningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnDodajClanaNaTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnDodajClanaNaTrening)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout CentralniLayout = new javax.swing.GroupLayout(Centralni);
        Centralni.setLayout(CentralniLayout);
        CentralniLayout.setHorizontalGroup(
            CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CentralniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarPopunjenostTreninga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(CentralniLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        CentralniLayout.setVerticalGroup(
            CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CentralniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarPopunjenostTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CentralniLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Centralni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Centralni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private List<Trening> treninzi = new ArrayList<>();

    private void jcboxDatumTreningaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcboxDatumTreningaActionPerformed

        try {
            treninzi = Kontroler.getInstance().vratiSvaVremena(LocalDate.parse((CharSequence) jcboxDatumTreninga.getSelectedItem()));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        popuniTabeluVremena(treninzi);
    }//GEN-LAST:event_jcboxDatumTreningaActionPerformed

    private void jTablePrikazVremenaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrikazVremenaMouseClicked

        int selectedRow = jTablePrikazVremena.getSelectedRow();
        if (selectedRow != -1) {
            jProgressBarPopunjenostTreninga.setVisible(true);
            Trening trening = treninzi.get(selectedRow);
            Memory.getInstance().setObj(trening);
            List<Trener> treneri = new ArrayList<>();
            List<Clan> clanovi = new ArrayList<>();
            try {
                treneri = Kontroler.getInstance().vratiSveTrenere(trening);
                trening.setTreneri(treneri);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage() + "\nGreska prilikom ucitavanja trenera.", "Ucitavanje trenera", JOptionPane.ERROR_MESSAGE);
            }
            try {
                clanovi = Kontroler.getInstance().vratiSveClanove(trening);
                trening.setClanovi(clanovi);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage() + "\nGreska prilikom ucitavanja clanova.", "Ucitavanje claniva", JOptionPane.ERROR_MESSAGE);
            }

            jListTrener.setModel(new ListModelTrener(treneri));
            jListClanova.setModel(new ListModelClanovi(clanovi));
            try {
                int popunjenost = new BigDecimal((clanovi.size() * 100.0) / treneri.get(0).getSport().getMaxBrClanova()).setScale(0, RoundingMode.HALF_UP).intValue();
                jProgressBarPopunjenostTreninga.setValue(popunjenost);
                System.out.println("Popunjenost " + (popunjenost));
            } catch (Exception e) {

            }
        }else{
            JOptionPane.showMessageDialog(this, "Morate izabrati vreme treninga!");
        }

    }//GEN-LAST:event_jTablePrikazVremenaMouseClicked

    private void jBtnDodajClanaNaTreningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajClanaNaTreningActionPerformed
        try {
            Trening trening = (Trening) Memory.getInstance().getObj();
            trening.setClanovi(((ListModelClanovi) jListClanova.getModel()).vratiClanoveNaTreningu());
            UbaciClanoveUTrening dialog = new UbaciClanoveUTrening(null, false, trening);
            dialog.setLocation(jBtnDodajClanaNaTrening.getLocation());
            dialog.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Morate izabrati vreme treninga!","Greska",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBtnDodajClanaNaTreningActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Centralni;
    private javax.swing.JButton jBtnDodajClanaNaTrening;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<Clan> jListClanova;
    private javax.swing.JList<Trener> jListTrener;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBarPopunjenostTreninga;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePrikazVremena;
    private javax.swing.JComboBox<String> jcboxDatumTreninga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluVremena(List<Trening> treninzi) {
        TableModelPrikazVreme model = new TableModelPrikazVreme(treninzi);

        jTablePrikazVremena.setModel(model);
        // model.fireTableDataChanged();
    }

    private void ucitajListuTreninga() throws Exception {
        jcboxDatumTreninga.removeAllItems();
        try {
            List<LocalDate> datumi = Kontroler.getInstance().vratiSveDatume();

            datumi.stream().forEach((da) -> {
                jcboxDatumTreninga.addItem(da.toString());
            });
        } catch (Exception ex) {
            //ex.printStackTrace();
            throw new Exception(ex + "\nNe moze se prikazati panel sa treninzima!");
        }
    }

}
