/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.panel;

import domen.Clan;
import domen.Trener;
import domen.Trening;
import forma.INazad;
import forma.UbaciClanoveNaTrening;
import forma.UbaciTrenereNaTrening;
import forma.UnosTreninga;
import forma.panel.model.ListModelClanovi;
import forma.panel.model.ListModelTrener;
import forma.panel.model.TabelaModelPrikazTrener;
import forma.panel.model.TableModelPrikazVreme;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import radnaMemorija.Memory;
import request.RequestObject;
import response.ResponseObject;
import util.Akcije;

/**
 *
 * @author Milan
 */
public class PanelZaPrikazTreninga extends javax.swing.JPanel implements INazad{

    private List<Trening> treninzi;

    /**
     * Creates new form PanelZaPrikazTreninga
     */
    public PanelZaPrikazTreninga() throws Exception {
        System.out.println("Panel za prikaz treninga");
        initComponents();
        ucitajListuTreninga();
        jProgressBarPopunjenostTreninga.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Centralni = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jcboxDatumTreninga = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePrikazVremena = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListTrener = new javax.swing.JList<>();
        jBtnDodajTreneraNaTrening = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClanova = new javax.swing.JList<>();
        jBtnDodajClanaNaTrening = new javax.swing.JButton();
        jProgressBarPopunjenostTreninga = new javax.swing.JProgressBar();
        jPanelHeader = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jbtnDodajTrening = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(727, 437));

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 100));

        jcboxDatumTreninga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcboxDatumTreningaActionPerformed(evt);
            }
        });

        jLabel1.setText("Datum treninga: ");

        jTablePrikazVremena.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vreme od", "Vreme do"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePrikazVremena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrikazVremenaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePrikazVremena);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcboxDatumTreninga, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcboxDatumTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Treneri"));

        jListTrener.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jListTrener.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListTrener.setEnabled(false);
        jScrollPane2.setViewportView(jListTrener);

        jBtnDodajTreneraNaTrening.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jpg/rsz_greenadd.png"))); // NOI18N
        jBtnDodajTreneraNaTrening.setToolTipText("dodaj clana");
        jBtnDodajTreneraNaTrening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajTreneraNaTreningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnDodajTreneraNaTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtnDodajTreneraNaTrening)
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clanovi"));

        jListClanova.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jListClanova.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListClanova.setEnabled(false);
        jScrollPane1.setViewportView(jListClanova);

        jBtnDodajClanaNaTrening.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jpg/rsz_greenadd.png"))); // NOI18N
        jBtnDodajClanaNaTrening.setToolTipText("dodaj clana");
        jBtnDodajClanaNaTrening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDodajClanaNaTreningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnDodajClanaNaTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnDodajClanaNaTrening)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap())
        );

        jProgressBarPopunjenostTreninga.setToolTipText("Procenat popunjenosti treninga");
        jProgressBarPopunjenostTreninga.setName("Popunjenost treninga"); // NOI18N
        jProgressBarPopunjenostTreninga.setOpaque(true);
        jProgressBarPopunjenostTreninga.setStringPainted(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarPopunjenostTreninga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarPopunjenostTreninga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout CentralniLayout = new javax.swing.GroupLayout(Centralni);
        Centralni.setLayout(CentralniLayout);
        CentralniLayout.setHorizontalGroup(
            CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CentralniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        CentralniLayout.setVerticalGroup(
            CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CentralniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CentralniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel2.setText("Prikaz treninga");

        jbtnDodajTrening.setText("Dodaj trening");
        jbtnDodajTrening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajTreningActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnDodajTrening)
                .addContainerGap())
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelHeaderLayout.createSequentialGroup()
                        .addComponent(jbtnDodajTrening)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Centralni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Centralni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void jcboxDatumTreningaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcboxDatumTreningaActionPerformed

//        try {
//            RequestObject requestObj = new RequestObject();
//            requestObj.setObject((LocalDate) jcboxDatumTreninga.getSelectedItem());
//            requestObj.setAction(Akcije.VRATI_VREMENA);
//            Komunikacija.vratiInstancu().posaljiZahtev(requestObj);
        LocalDate datum = (LocalDate) jcboxDatumTreninga.getSelectedItem();

        List<Trening> tr = treninzi.stream()
                .filter(t -> t.getDatum().equals(datum))
                .collect(Collectors.toList());
//            ResponseObject response = Komunikacija.vratiInstancu().procitajOdgovor();
//            treninzi = (List<Trening>) response.getObject();
        popuniTabeluVremena(tr);
//        } catch (IOException | ClassNotFoundException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
//        }


    }//GEN-LAST:event_jcboxDatumTreningaActionPerformed

    private void jTablePrikazVremenaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrikazVremenaMouseClicked
        int selectedRow = jTablePrikazVremena.convertRowIndexToView(jTablePrikazVremena.getSelectedRow());
        if (selectedRow != -1) {
            jProgressBarPopunjenostTreninga.setVisible(true);
            Trening trening = ((TableModelPrikazVreme)jTablePrikazVremena.getModel()).vratiTreninge().get(selectedRow);
            Memory.getInstance().setObj(trening);
            List<Trener> treneri = new ArrayList<>();
            List<Clan> clanovi = new ArrayList<>();
            try {
                RequestObject requestObj = new RequestObject();

                requestObj.setAction(Akcije.VRATI_SVE_TRENERE_ZA_TRENING);
                requestObj.setObject(trening);
                Komunikacija.vratiInstancu().posaljiZahtev(requestObj);

                ResponseObject responseObj = Komunikacija.vratiInstancu().procitajOdgovor();
                treneri = (List<Trener>) responseObj.getObject();

                trening.setTreneri(treneri);
            } catch (IOException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage() + "\nGreska prilikom ucitavanja trenera.", "Ucitavanje trenera", JOptionPane.ERROR_MESSAGE);
            }
            try {
                RequestObject requestObj = new RequestObject();

                requestObj.setAction(Akcije.VRATI_SVE_CLANOVE_ZA_TRENING);
                requestObj.setObject(trening);
                Komunikacija.vratiInstancu().posaljiZahtev(requestObj);

                ResponseObject responseObj = Komunikacija.vratiInstancu().procitajOdgovor();

                clanovi = (List<Clan>) responseObj.getObject();

                trening.setClanovi(clanovi);
            } catch (IOException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage() + "\nGreska prilikom ucitavanja clanova.", "Ucitavanje claniva", JOptionPane.ERROR_MESSAGE);
            }
            try {
                jListTrener.setModel(new ListModelTrener(treneri));
                jListClanova.setModel(new ListModelClanovi(clanovi));
                
                if(!clanovi.isEmpty() || !treneri.isEmpty()){
                    int popunjenost = new BigDecimal((clanovi.size() * 100.0) / treneri.get(0).getSport().getMaxBrClanova()).setScale(0, RoundingMode.HALF_UP).intValue();
                    jProgressBarPopunjenostTreninga.setValue(popunjenost);
                }else{
                    jProgressBarPopunjenostTreninga.setValue(0);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati vreme treninga!", "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jTablePrikazVremenaMouseClicked

    private void jBtnDodajClanaNaTreningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajClanaNaTreningActionPerformed
        try {
            Trening trening = (Trening) Memory.getInstance().getObj();
            trening.setClanovi(((ListModelClanovi) jListClanova.getModel()).vratiClanoveNaTreningu());
            UbaciClanoveNaTrening dialog = new UbaciClanoveNaTrening(null, false, trening);
            dialog.setLocation(jBtnDodajClanaNaTrening.getLocation());
            dialog.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Morate izabrati vreme treninga!", "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBtnDodajClanaNaTreningActionPerformed

    private void jBtnDodajTreneraNaTreningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDodajTreneraNaTreningActionPerformed
        try {
            Trening trening = (Trening) Memory.getInstance().getObj();
            trening.setTreneri(((ListModelTrener) jListTrener.getModel()).vratiTrenereNaTreningu());
            UbaciTrenereNaTrening dialog = new UbaciTrenereNaTrening(null, false, trening);
            dialog.setLocation(jBtnDodajClanaNaTrening.getLocation());
            dialog.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Morate izabrati vreme treninga!", "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBtnDodajTreneraNaTreningActionPerformed

    private void jbtnDodajTreningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajTreningActionPerformed
        try {

            UnosTreninga form = new UnosTreninga(null, true);
            form.setVisible(true);
            ucitajListuTreninga();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbtnDodajTreningActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Centralni;
    private javax.swing.JButton jBtnDodajClanaNaTrening;
    private javax.swing.JButton jBtnDodajTreneraNaTrening;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<Clan> jListClanova;
    private javax.swing.JList<Trener> jListTrener;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JProgressBar jProgressBarPopunjenostTreninga;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTablePrikazVremena;
    private javax.swing.JButton jbtnDodajTrening;
    private javax.swing.JComboBox<LocalDate> jcboxDatumTreninga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluVremena(List<Trening> treninzi) {
        TableModelPrikazVreme model = new TableModelPrikazVreme(treninzi);

        jTablePrikazVremena.setModel(model);
        // model.fireTableDataChanged();
    }

    private void ucitajListuTreninga() throws Exception {
        jcboxDatumTreninga.removeAllItems();
        try {
            RequestObject requestObj = new RequestObject();

            requestObj.setAction(Akcije.VRATI_TRENINGE);
            Komunikacija.vratiInstancu().posaljiZahtev(requestObj);

            ResponseObject responseObj = Komunikacija.vratiInstancu().procitajOdgovor();
            treninzi = (List<Trening>) responseObj.getObject();

            List<LocalDate> datumi = new ArrayList<>();

            for (Trening trening : treninzi) {
                if (!datumi.contains(trening.getDatum())) {
                    datumi.add(trening.getDatum());
                }
            }

            datumi.stream().forEach((da) -> {
                jcboxDatumTreninga.addItem(da);
            });

        } catch (IOException | ClassNotFoundException ex) {
            //ex.printStackTrace();
            throw new Exception(ex + "\nNe moze se prikazati panel sa treninzima!");
        }
    }

    @Override
    public boolean proveriIzmene() {
        return true;
    }

}
